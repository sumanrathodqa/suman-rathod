{"version":3,"file":"extraReporters.js","names":["Mocha","createRequire","path","localRequire","require","import","meta","url","enableExtraReporters","runner","options","extraReportersConfig","extraReporterEntries","Array","from","generateCanonicalizedReporterEntries","loadedReporterEntries","loadReporters","instantiateReporters","doneAll","reporters","failures","fn","doneCallbacks","collectDoneCallbacks","callbacksToWait","length","onReporterIsDone","done","isReporterArrayEntry","resolveReporterArrayEntry","map","e","resolveReporterEntry","reporterEntries","_ref","moduleOrCtor","loadReporterModule","entries","Reporter","reporterOptions","optionsForReporter","_objectSpread","push","reporter","bind","maybeReporterModuleOrCtor","maybeReporterOptions","builtInReporters","builtInReporterCtor","reporterModulePath","getReporterModulePath","Error","concat","message","module","resolve","reporterEntry"],"sources":["../../src/extraReporters.ts"],"sourcesContent":["import * as Mocha from \"mocha\";\nimport { createRequire } from \"node:module\";\nimport path from \"node:path\";\nimport type { ReporterDoneFn, ReporterEntry, ReporterModuleOrCtor, ReporterOptions } from \"./types.js\";\n\ntype CanonicalReporterEntry = readonly [ReporterModuleOrCtor, ReporterOptions];\ntype ShortReporterEntry = readonly [ReporterModuleOrCtor];\ntype LoadedReporterEntry = readonly [Mocha.ReporterConstructor, ReporterOptions];\n\n// There is no global require in ESM, and we can't use dynamic import (which returns a promise) because it's called from the reporter's constructor; therefore, it must be synchronous.\nconst localRequire = typeof require === \"function\" ? require : createRequire(import.meta.url);\n\nexport const enableExtraReporters = (\n  runner: Mocha.Runner,\n  options: Mocha.MochaOptions,\n  extraReportersConfig: ReporterEntry | readonly ReporterEntry[],\n) => {\n  const extraReporterEntries = Array.from(generateCanonicalizedReporterEntries(extraReportersConfig));\n  const loadedReporterEntries = loadReporters(extraReporterEntries);\n  return instantiateReporters(runner, options, loadedReporterEntries);\n};\n\nexport const doneAll = (\n  reporters: readonly Mocha.reporters.Base[],\n  failures: number,\n  fn?: ((failures: number) => void) | undefined,\n) => {\n  const doneCallbacks = collectDoneCallbacks(reporters);\n  let callbacksToWait = doneCallbacks.length + 1;\n  const onReporterIsDone = () => {\n    if (--callbacksToWait === 0) {\n      fn?.(failures);\n    }\n  };\n\n  for (const done of doneCallbacks) {\n    done(failures, onReporterIsDone);\n  }\n\n  onReporterIsDone(); // handle the synchronous completion\n};\n\nconst generateCanonicalizedReporterEntries = function* (\n  reporters: ReporterEntry | readonly ReporterEntry[] | undefined,\n): Generator<CanonicalReporterEntry, void, undefined> {\n  if (reporters) {\n    if (!(reporters instanceof Array)) {\n      yield [reporters, {}];\n    } else {\n      if (isReporterArrayEntry(reporters)) {\n        yield resolveReporterArrayEntry(reporters);\n      } else {\n        yield* reporters.map((e) => {\n          return resolveReporterEntry(e);\n        });\n      }\n    }\n  }\n};\n\nconst loadReporters = (reporterEntries: readonly CanonicalReporterEntry[]): LoadedReporterEntry[] =>\n  reporterEntries.map(([moduleOrCtor, options]) => [loadReporterModule(moduleOrCtor), options]);\n\nconst instantiateReporters = (\n  runner: Mocha.Runner,\n  options: Mocha.MochaOptions,\n  entries: readonly LoadedReporterEntry[],\n) => {\n  const reporters: Mocha.reporters.Base[] = [];\n  for (const [Reporter, reporterOptions] of entries) {\n    const optionsForReporter = {\n      ...options,\n      reporterOptions,\n      // eslint-disable-next-line quote-props\n      \"reporterOption\": reporterOptions,\n      \"reporter-option\": reporterOptions,\n    };\n    reporters.push(new Reporter(runner, optionsForReporter));\n  }\n  return reporters;\n};\n\nconst collectDoneCallbacks = (reporters: readonly Mocha.reporters.Base[]) => {\n  const doneCallbacks: ReporterDoneFn[] = [];\n  for (const reporter of reporters) {\n    if (reporter.done) {\n      doneCallbacks.push(reporter.done.bind(reporter));\n    }\n  }\n  return doneCallbacks;\n};\n\nconst isReporterArrayEntry = (\n  reporters: ShortReporterEntry | CanonicalReporterEntry | readonly ReporterEntry[],\n): reporters is ShortReporterEntry | CanonicalReporterEntry => {\n  const [maybeReporterModuleOrCtor, maybeReporterOptions = {}] = reporters;\n  return (\n    !(maybeReporterModuleOrCtor instanceof Array) &&\n    typeof maybeReporterOptions === \"object\" &&\n    !(maybeReporterOptions instanceof Array)\n  );\n};\n\nconst loadReporterModule = (moduleOrCtor: ReporterModuleOrCtor) => {\n  if (typeof moduleOrCtor === \"string\") {\n    const builtInReporters = Mocha.reporters as Record<string, Mocha.ReporterConstructor>;\n    const builtInReporterCtor = builtInReporters[moduleOrCtor];\n    if (builtInReporterCtor) {\n      return builtInReporterCtor;\n    }\n\n    const reporterModulePath = getReporterModulePath(moduleOrCtor);\n    try {\n      return localRequire(reporterModulePath) as Mocha.ReporterConstructor;\n    } catch (e: any) {\n      throw new Error(`Can't load the '${moduleOrCtor}' reporter from ${reporterModulePath}: ${e.message}`);\n    }\n  }\n\n  if (typeof moduleOrCtor !== \"function\") {\n    throw new Error(`A reporter value must be a string or a constructor. Got ${typeof moduleOrCtor}`);\n  }\n\n  return moduleOrCtor;\n};\n\nconst getReporterModulePath = (module: string) => {\n  try {\n    return localRequire.resolve(module);\n  } catch (e) {}\n\n  try {\n    return path.resolve(module);\n  } catch (e: any) {\n    throw new Error(`Can't resolve the '${module}' reporter's path: ${e.message}`);\n  }\n};\n\nconst resolveReporterEntry = (reporterEntry: ReporterEntry): CanonicalReporterEntry => {\n  return reporterEntry instanceof Array ? resolveReporterArrayEntry(reporterEntry) : [reporterEntry, {}];\n};\n\nconst resolveReporterArrayEntry = (\n  reporterEntry: ShortReporterEntry | CanonicalReporterEntry,\n): CanonicalReporterEntry => {\n  if (reporterEntry.length < 1 || reporterEntry.length > 2) {\n    throw new Error(\n      `If an extra reporter entry is an array, it must contain one or two elements. ${reporterEntry.length} found`,\n    );\n  }\n\n  return reporterEntry.length === 1 ? [...reporterEntry, {}] : [...reporterEntry];\n};\n"],"mappings":"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","ignoreList":[]}